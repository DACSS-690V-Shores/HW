labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
jitter = base + geom_jitter(color = "#6DB6FF",
alpha = 0.2, #transparency
size = 0.5)
# layer a boxplot over the jitter point plot
# the notch shows confidence interval
# when the notches between two groups don't overlap then
# it suggests medians are significantly different
#
box = jitter +
geom_boxplot(alpha = 0.7, # Adjust alpha for transparency
color = "gray50",
linewidth = 0.7,
notch = TRUE,
notchwidth = 0.75,
width = 0.6) +
# Adds 30% spacing above and below
scale_y_discrete(expand = expansion(mult = c(0.2, 0)))
# Decorate with contextual info
final = box +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
caption = sourceText) +
scale_x_continuous(breaks = seq(min(arrests$Age), max(arrests$Age), by = 10)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(size = 10,
color = "gray50"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(color = "gray80", linewidth = 0.5),
panel.background = element_blank(),  # Remove panel background
plot.background = element_blank(),  # Remove plot background
axis.title.y = element_blank(),   # Remove y-axis label
axis.text.y = element_blank(),    # Remove y-axis elements
panel.grid.major.x = element_line(color = "gray80", linewidth = 0.5),  # Add vertical grid lines
legend.title = element_text(size = 8),  # Adjust title size
legend.text = element_text(size = 8),    # Adjust text size
# Move label to the right and align vertically
axis.title.x = element_text(hjust = 0.04,
size = 10,
color = "gray50"))
# write to an R data serialization file
saveRDS(final, file = "assignment02_option2_catnum.rds")
install.packages("ggthemes")
install.packages("paletteer")
my_packages <- c("tidyverse",
"ggplot2",
"ggpubr",
"forcats",
"paletteer",
"rio") # create vector of packages
invisible(lapply(my_packages, require, character.only = TRUE)) # load multiple packages
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
#scale_fill_manual(values = scales::hue_pal()(length(unique(arrests$Arrest_Type))),
scale_fill_manual(values = ggthemes::Orange()(length(unique(arrests$Arrest_Type))),
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
#scale_fill_manual(values = scales::hue_pal()(length(unique(arrests$Arrest_Type))),
scale_fill_manual(values = paletteer::paletteer_c("ggthemes::Orange", 30)(length(unique(arrests$Arrest_Type))),
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
#scale_fill_manual(values = scales::hue_pal()(length(unique(arrests$Arrest_Type))),
scale_fill_manual(values = paletteer::paletteer_c("ggthemes::Orange", 30)[1:n_types],
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
# Get the number of unique arrest types
n_types <- length(unique(arrests$Arrest_Type))
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
#scale_fill_manual(values = scales::hue_pal()(length(unique(arrests$Arrest_Type))),
scale_fill_manual(values = paletteer::paletteer_c("ggthemes::Orange", 30)[1:n_types],
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
jitter = base + geom_jitter(color = "#6DB6FF",
alpha = 0.2, #transparency
size = 0.5)
# layer a boxplot over the jitter point plot
# the notch shows confidence interval
# when the notches between two groups don't overlap then
# it suggests medians are significantly different
#
box = jitter +
geom_boxplot(alpha = 0.7, # Adjust alpha for transparency
color = "gray50",
linewidth = 0.7,
notch = TRUE,
notchwidth = 0.75,
width = 0.6) +
# Adds spacing above and below
scale_y_discrete(expand = expansion(mult = c(0.2, 0)))
# Decorate with contextual info
final = box +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
caption = sourceText) +
scale_x_continuous(breaks = seq(min(arrests$Age), max(arrests$Age), by = 10)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(size = 10,
color = "gray50"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(color = "gray80", linewidth = 0.5),
panel.background = element_blank(),  # Remove panel background
plot.background = element_blank(),  # Remove plot background
axis.title.y = element_blank(),   # Remove y-axis label
axis.text.y = element_blank(),    # Remove y-axis elements
panel.grid.major.x = element_line(color = "gray80", linewidth = 0.5),  # Add vertical grid lines
legend.title = element_text(size = 8),  # Adjust title size
legend.text = element_text(size = 8),    # Adjust text size
# Move label to the right and align vertically
axis.title.x = element_text(hjust = 0.04,
size = 10,
color = "gray50"))
# write to an R data serialization file
saveRDS(final, file = "assignment02_option2_catnum.rds")
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
#scale_fill_manual(values = scales::hue_pal()(length(unique(arrests$Arrest_Type))),
scale_fill_manual(values = paletteer::paletteer_d("colorBlindness::Blue2Orange8Steps")[1:n_types],
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
jitter = base + geom_jitter(color = "#6DB6FF",
alpha = 0.2, #transparency
size = 0.5)
# layer a boxplot over the jitter point plot
# the notch shows confidence interval
# when the notches between two groups don't overlap then
# it suggests medians are significantly different
#
box = jitter +
geom_boxplot(alpha = 0.7, # Adjust alpha for transparency
color = "gray50",
linewidth = 0.7,
notch = TRUE,
notchwidth = 0.75,
width = 0.6) +
# Adds spacing above and below
scale_y_discrete(expand = expansion(mult = c(0.2, 0)))
# Decorate with contextual info
final = box +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
caption = sourceText) +
scale_x_continuous(breaks = seq(min(arrests$Age), max(arrests$Age), by = 10)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(size = 10,
color = "gray50"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(color = "gray80", linewidth = 0.5),
panel.background = element_blank(),  # Remove panel background
plot.background = element_blank(),  # Remove plot background
axis.title.y = element_blank(),   # Remove y-axis label
axis.text.y = element_blank(),    # Remove y-axis elements
panel.grid.major.x = element_line(color = "gray80", linewidth = 0.5),  # Add vertical grid lines
legend.title = element_text(size = 8),  # Adjust title size
legend.text = element_text(size = 8),    # Adjust text size
# Move label to the right and align vertically
axis.title.x = element_text(hjust = 0.04,
size = 10,
color = "gray50"))
# write to an R data serialization file
saveRDS(final, file = "assignment02_option2_catnum.rds")
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
#scale_fill_manual(values = scales::hue_pal()(length(unique(arrests$Arrest_Type))),
scale_fill_manual(values = paletteer::paletteer_d("colorBlindness::ModifiedSpectralScheme11Steps")[1:n_types],
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
jitter = base + geom_jitter(color = "#6DB6FF",
alpha = 0.2, #transparency
size = 0.5)
# layer a boxplot over the jitter point plot
# the notch shows confidence interval
# when the notches between two groups don't overlap then
# it suggests medians are significantly different
#
box = jitter +
geom_boxplot(alpha = 0.7, # Adjust alpha for transparency
color = "gray50",
linewidth = 0.7,
notch = TRUE,
notchwidth = 0.75,
width = 0.6) +
# Adds spacing above and below
scale_y_discrete(expand = expansion(mult = c(0.2, 0)))
# Decorate with contextual info
final = box +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
caption = sourceText) +
scale_x_continuous(breaks = seq(min(arrests$Age), max(arrests$Age), by = 10)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(size = 10,
color = "gray50"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(color = "gray80", linewidth = 0.5),
panel.background = element_blank(),  # Remove panel background
plot.background = element_blank(),  # Remove plot background
axis.title.y = element_blank(),   # Remove y-axis label
axis.text.y = element_blank(),    # Remove y-axis elements
panel.grid.major.x = element_line(color = "gray80", linewidth = 0.5),  # Add vertical grid lines
legend.title = element_text(size = 8),  # Adjust title size
legend.text = element_text(size = 8),    # Adjust text size
# Move label to the right and align vertically
axis.title.x = element_text(hjust = 0.04,
size = 10,
color = "gray50"))
# write to an R data serialization file
saveRDS(final, file = "assignment02_option2_catnum.rds")
paletteer_d("colorBlindness::Blue2Orange8Steps")
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
#scale_fill_manual(values = scales::hue_pal()(length(unique(arrests$Arrest_Type))),
scale_fill_manual(values = paletteer::paletteer_d("colorBlindness::Blue2Orange8Steps")[1:n_types],
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
jitter = base + geom_jitter(color = "#6DB6FF",
alpha = 0.2, #transparency
size = 0.5)
# layer a boxplot over the jitter point plot
# the notch shows confidence interval
# when the notches between two groups don't overlap then
# it suggests medians are significantly different
#
box = jitter +
geom_boxplot(alpha = 0.7, # Adjust alpha for transparency
color = "gray50",
linewidth = 0.7,
notch = TRUE,
notchwidth = 0.75,
width = 0.6) +
# Adds spacing above and below
scale_y_discrete(expand = expansion(mult = c(0.2, 0)))
# Decorate with contextual info
final = box +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
caption = sourceText) +
scale_x_continuous(breaks = seq(min(arrests$Age), max(arrests$Age), by = 10)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(size = 10,
color = "gray50"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(color = "gray80", linewidth = 0.5),
panel.background = element_blank(),  # Remove panel background
plot.background = element_blank(),  # Remove plot background
axis.title.y = element_blank(),   # Remove y-axis label
axis.text.y = element_blank(),    # Remove y-axis elements
panel.grid.major.x = element_line(color = "gray80", linewidth = 0.5),  # Add vertical grid lines
legend.title = element_text(size = 8),  # Adjust title size
legend.text = element_text(size = 8),    # Adjust text size
# Move label to the right and align vertically
axis.title.x = element_text(hjust = 0.04,
size = 10,
color = "gray50"))
# write to an R data serialization file
saveRDS(final, file = "assignment02_option2_catnum.rds")
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
#scale_fill_manual(values = scales::hue_pal()(length(unique(arrests$Arrest_Type))),
scale_fill_manual(values = paletteer::paletteer_d("colorBlindness::LightBlue2DarkBlue7Steps")[1:n_types],
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
jitter = base + geom_jitter(color = "#6DB6FF",
alpha = 0.2, #transparency
size = 0.5)
# layer a boxplot over the jitter point plot
# the notch shows confidence interval
# when the notches between two groups don't overlap then
# it suggests medians are significantly different
#
box = jitter +
geom_boxplot(alpha = 0.7, # Adjust alpha for transparency
color = "gray50",
linewidth = 0.7,
notch = TRUE,
notchwidth = 0.75,
width = 0.6) +
# Adds spacing above and below
scale_y_discrete(expand = expansion(mult = c(0.2, 0)))
# Decorate with contextual info
final = box +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
caption = sourceText) +
scale_x_continuous(breaks = seq(min(arrests$Age), max(arrests$Age), by = 10)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(size = 10,
color = "gray50"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(color = "gray80", linewidth = 0.5),
panel.background = element_blank(),  # Remove panel background
plot.background = element_blank(),  # Remove plot background
axis.title.y = element_blank(),   # Remove y-axis label
axis.text.y = element_blank(),    # Remove y-axis elements
panel.grid.major.x = element_line(color = "gray80", linewidth = 0.5),  # Add vertical grid lines
legend.title = element_text(size = 8),  # Adjust title size
legend.text = element_text(size = 8),    # Adjust text size
# Move label to the right and align vertically
axis.title.x = element_text(hjust = 0.04,
size = 10,
color = "gray50"))
# write to an R data serialization file
saveRDS(final, file = "assignment02_option2_catnum.rds")
my_packages <- c("tidyverse",
"ggplot2",
"ggpubr",
#"forcats",
"paletteer",
"rio") # create vector of packages
invisible(lapply(my_packages, require, character.only = TRUE)) # load multiple packages
# Massachusetts State Police arrest details.
linkMass="https://github.com/DACSS-Visual/tabular_bivar_catcat/raw/refs/heads/main/data/MSP%20DFS%20Arrests%2019-20Q1.xlsx"
#see it
arrests = rio::import(linkMass,which = 1)
head(arrests)
arrests <- arrests %>%
select("Arrest Type", Age) %>%
rename(Arrest_Type = "Arrest Type")
tapply(arrests$Age,arrests$Arrest_Type, summary)
# set NA Ages to median age
arrests$Age[is.na(arrests$Age)] <- median(arrests$Age, na.rm = TRUE)
# set NA Arrest Types to "Unknown"
arrests$Arrest_Type[is.na(arrests$Arrest_Type)] <- "Unknown"
# Replace values in the column
# (codebook in source spreadsheet)
arrests$Arrest_Type <- recode(arrests$Arrest_Type,
"F" = "Felony",
"O" = "Other",
"M" = "Misdemeanor",
"W" = "Warrant")
# Calculate counts for each Arrest_Type
counts <- arrests %>%
group_by(Arrest_Type) %>%
summarize(Count = n())
# Reorder Arrest_Type by Count (greatest to least)
arrests$Arrest_Type <- factor(arrests$Arrest_Type,
levels = counts %>%
arrange(desc(Count)) %>%
pull(Arrest_Type))
# Load up plot information variables
titleText = 'Misdemeanors and warrants lead Massachusetts arrests'
sub_titleText = 'State police arrests in 2019-2020 centered on 30-40 year olds'
sourceText = 'Source: Massachusetts State Police'
x.AxisText = 'Age of Arrestee'
# Get the number of unique arrest types
n_types <- length(unique(arrests$Arrest_Type))
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
# colors from https://r-charts.com/color-palettes/#discrete
scale_fill_manual(values = paletteer::paletteer_d("colorBlindness::LightBlue2DarkBlue7Steps")[1:n_types],
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
jitter = base + geom_jitter(color = "#6DB6FF",
alpha = 0.2, #transparency
size = 0.5)
# layer a boxplot over the jitter point plot
# the notch shows confidence interval
# when the notches between two groups don't overlap then
# it suggests medians are significantly different
#
box = jitter +
geom_boxplot(alpha = 0.7, # Adjust alpha for transparency
color = "gray50",
linewidth = 0.7,
notch = TRUE,
notchwidth = 0.75,
width = 0.6) +
# Adds spacing above and below
scale_y_discrete(expand = expansion(mult = c(0.2, 0)))
# Decorate with contextual info
final = box +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
caption = sourceText) +
scale_x_continuous(breaks = seq(min(arrests$Age), max(arrests$Age), by = 10)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(size = 10,
color = "gray50"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(color = "gray80", linewidth = 0.5),
panel.background = element_blank(),  # Remove panel background
plot.background = element_blank(),  # Remove plot background
axis.title.y = element_blank(),   # Remove y-axis label
axis.text.y = element_blank(),    # Remove y-axis elements
panel.grid.major.x = element_line(color = "gray80", linewidth = 0.5),  # Add vertical grid lines
legend.title = element_text(size = 8),  # Adjust title size
legend.text = element_text(size = 8),    # Adjust text size
# Move label to the right and align vertically
axis.title.x = element_text(hjust = 0.04,
size = 10,
color = "gray50"))
# write to an R data serialization file
saveRDS(final, file = "assignment02_option2_catnum.rds")
sub_titleText = 'State police arrests in 2019-2020 centered on 30-35 year olds'
base = ggplot(arrests, aes(x = Age,
y = reorder(Arrest_Type, Arrest_Type, function(x) length(x)),
fill = Arrest_Type)) +
# uses order by Arrest_Type count (descending) to fill scale and create legend
# colors from https://r-charts.com/color-palettes/#discrete
scale_fill_manual(values = paletteer::paletteer_d("colorBlindness::LightBlue2DarkBlue7Steps")[1:n_types],
labels = paste0(counts %>% arrange(desc(Count)) %>% pull(Arrest_Type),
" (n=", counts %>% arrange(desc(Count)) %>% pull(Count), ")")) +
guides(fill = guide_legend(title = "Arrest Type (Count)")) +
theme(legend.position = "right")
jitter = base + geom_jitter(color = "#6DB6FF",
alpha = 0.2, #transparency
size = 0.5)
# layer a boxplot over the jitter point plot
# the notch shows confidence interval
# when the notches between two groups don't overlap then
# it suggests medians are significantly different
#
box = jitter +
geom_boxplot(alpha = 0.7, # Adjust alpha for transparency
color = "gray50",
linewidth = 0.7,
notch = TRUE,
notchwidth = 0.75,
width = 0.6) +
# Adds spacing above and below
scale_y_discrete(expand = expansion(mult = c(0.2, 0)))
# Decorate with contextual info
final = box +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
caption = sourceText) +
scale_x_continuous(breaks = seq(min(arrests$Age), max(arrests$Age), by = 10)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(size = 10,
color = "gray50"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(color = "gray80", linewidth = 0.5),
panel.background = element_blank(),  # Remove panel background
plot.background = element_blank(),  # Remove plot background
axis.title.y = element_blank(),   # Remove y-axis label
axis.text.y = element_blank(),    # Remove y-axis elements
panel.grid.major.x = element_line(color = "gray80", linewidth = 0.5),  # Add vertical grid lines
legend.title = element_text(size = 8),  # Adjust title size
legend.text = element_text(size = 8),    # Adjust text size
# Move label to the right and align vertically
axis.title.x = element_text(hjust = 0.04,
size = 10,
color = "gray50"))
# write to an R data serialization file
saveRDS(final, file = "assignment02_option2_catnum.rds")
