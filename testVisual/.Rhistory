# https://davidmathlogic.com/colorblind/
base = ggplot(data = ruralEduwa_STRatio,
aes(x = reorder(RuralLocale, difference),
y = difference,
color = gtMean,
label = paste("Mean = \n",
round(mean_Student.Teacher.Ratio, 1))),
hjust = 0) +
scale_color_manual(values =
c(Yes = "#882255",
No = "#117733")) +
geom_text(nudge_x = 0.3, # to the right
show.legend = FALSE)
base = base + theme_classic()
# lollipop style
base = base +
geom_segment(aes(y = 0,
x = reorder(RuralLocale, difference),
yend = difference,
xend = reorder(RuralLocale, difference)),
color = "grey50") +
geom_point(size = 5)
# Draw horizontal line (yintercept) representing mean Student.Teacher.Ratio
# from the original data set,
# including all locales (City, Suburb, Town, Unknown) in addition to Rural.
base = base +
geom_hline(yintercept = 0,
linewidth = 1.5, #thickness
alpha = 0.5) + #transparency
annotate(geom = "text",
x = 0.5,
y = 0.3,
label = meanAnnotation,
hjust = 0,
vjust = 1,
size = 4)
# Decorate with contextual info
base = base +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
y = y.AxisText,
caption = sourceText,
colour = legTitle) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0))
base
meanAnnotation = paste("Mean STR of all WA schools =", round(meanSTRatio, 2))
rm(base)
# Initialize base plot, reorder by mean
# Color-blind colors chosen from:
# https://davidmathlogic.com/colorblind/
base = ggplot(data = ruralEduwa_STRatio,
aes(x = reorder(RuralLocale, difference),
y = difference,
color = gtMean,
label = paste("Mean = \n",
round(mean_Student.Teacher.Ratio, 1))),
hjust = 0) +
scale_color_manual(values =
c(Yes = "#882255",
No = "#117733")) +
geom_text(nudge_x = 0.3, # to the right
show.legend = FALSE)
base = base + theme_classic()
# lollipop style
base = base +
geom_segment(aes(y = 0,
x = reorder(RuralLocale, difference),
yend = difference,
xend = reorder(RuralLocale, difference)),
color = "grey50") +
geom_point(size = 5)
# Draw horizontal line (yintercept) representing mean Student.Teacher.Ratio
# from the original data set,
# including all locales (City, Suburb, Town, Unknown) in addition to Rural.
base = base +
geom_hline(yintercept = 0,
linewidth = 1.5, #thickness
alpha = 0.5) + #transparency
annotate(geom = "text",
x = 0.5,
y = 0.3,
label = meanAnnotation,
hjust = 0,
vjust = 1,
size = 4)
# Decorate with contextual info
base = base +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
y = y.AxisText,
caption = sourceText,
colour = legTitle) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0))
base
rm(base)
# Initialize base plot, reorder by mean
# Color-blind colors chosen from:
# https://davidmathlogic.com/colorblind/
base = ggplot(data = ruralEduwa_STRatio,
aes(x = reorder(RuralLocale, difference),
y = difference,
color = gtMean,
label = paste("Mean = \n",
round(mean_Student.Teacher.Ratio, 1))),
hjust = 0) +
scale_color_manual(values =
c(Yes = "#882255",
No = "#117733")) +
geom_text(nudge_x = 0.3, # to the right
show.legend = FALSE)
base = base + theme_classic()
# lollipop style
base = base +
geom_segment(aes(y = 0,
x = reorder(RuralLocale, difference),
yend = difference,
xend = reorder(RuralLocale, difference)),
color = "grey50") +
geom_point(size = 5)
# Draw horizontal line (yintercept) representing mean Student.Teacher.Ratio
# from the original data set,
# including all locales (City, Suburb, Town, Unknown) in addition to Rural.
base = base +
geom_hline(yintercept = 0,
linewidth = 1.5, #thickness
alpha = 0.5) + #transparency
annotate(geom = "text",
x = 0.5,
y = 0.3,
label = meanAnnotation,
hjust = 0,
vjust = 1,
size = 4)
base = base +
theme(axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(), # can also tidy up x-axis
axis.ticks.x = element_blank())
# Decorate with contextual info
base = base +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
y = y.AxisText,
caption = sourceText,
colour = legTitle) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0))
base
legTitle = 'Greater than μ'
meanAnnotation = paste("μ STR of all WA schools =", round(meanSTRatio, 2))
rm(base)
# Initialize base plot, reorder by mean
# Color-blind colors chosen from:
# https://davidmathlogic.com/colorblind/
base = ggplot(data = ruralEduwa_STRatio,
aes(x = reorder(RuralLocale, difference),
y = difference,
color = gtMean,
label = paste("μ =",
round(mean_Student.Teacher.Ratio, 1))),
hjust = 0) +
scale_color_manual(values =
c(Yes = "#882255",
No = "#117733")) +
geom_text(nudge_x = 0.3, # to the right
show.legend = FALSE)
base = base + theme_classic()
# lollipop style
base = base +
geom_segment(aes(y = 0,
x = reorder(RuralLocale, difference),
yend = difference,
xend = reorder(RuralLocale, difference)),
color = "grey50") +
geom_point(size = 5)
# Draw horizontal line (yintercept) representing mean Student.Teacher.Ratio
# from the original data set,
# including all locales (City, Suburb, Town, Unknown) in addition to Rural.
base = base +
geom_hline(yintercept = 0,
linewidth = 1.5, #thickness
alpha = 0.5) + #transparency
annotate(geom = "text",
x = 0.5,
y = 0.3,
label = meanAnnotation,
hjust = 0,
vjust = 1,
size = 4)
base = base +
theme(axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(), # can also tidy up x-axis
axis.ticks.x = element_blank())
# Decorate with contextual info
base = base +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
y = y.AxisText,
caption = sourceText,
colour = legTitle) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0))
base
legTitle = 'Greater than STR μ'
meanAnnotation = paste("STR μ of all WA schools =", round(meanSTRatio, 2))
rm(base)
# Initialize base plot, reorder by mean
# Color-blind colors chosen from:
# https://davidmathlogic.com/colorblind/
base = ggplot(data = ruralEduwa_STRatio,
aes(x = reorder(RuralLocale, difference),
y = difference,
color = gtMean,
label = paste("mean",
round(mean_Student.Teacher.Ratio, 1))),
hjust = 0) +
scale_color_manual(values =
c(Yes = "#882255",
No = "#117733")) +
geom_text(nudge_x = 0.3, # to the right
show.legend = FALSE)
base = base + theme_classic()
# lollipop style
base = base +
geom_segment(aes(y = 0,
x = reorder(RuralLocale, difference),
yend = difference,
xend = reorder(RuralLocale, difference)),
color = "grey50") +
geom_point(size = 5)
# Draw horizontal line (yintercept) representing mean Student.Teacher.Ratio
# from the original data set,
# including all locales (City, Suburb, Town, Unknown) in addition to Rural.
base = base +
geom_hline(yintercept = 0,
linewidth = 1.5, #thickness
alpha = 0.5) + #transparency
annotate(geom = "text",
x = 0.5,
y = 0.3,
label = meanAnnotation,
hjust = 0,
vjust = 1,
size = 4)
base = base +
theme(axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(), # can also tidy up x-axis
axis.ticks.x = element_blank())
# Decorate with contextual info
base = base +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
y = y.AxisText,
caption = sourceText,
colour = legTitle) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0))
base
legTitle = 'Greater than \n STR μ'
rm(base)
# Initialize base plot, reorder by mean
# Color-blind colors chosen from:
# https://davidmathlogic.com/colorblind/
base = ggplot(data = ruralEduwa_STRatio,
aes(x = reorder(RuralLocale, difference),
y = difference,
color = gtMean,
label = paste("mean",
round(mean_Student.Teacher.Ratio, 1))),
hjust = 0) +
scale_color_manual(values =
c(Yes = "#882255",
No = "#117733")) +
geom_text(nudge_x = 0.4, # to the right
show.legend = FALSE)
base = base + theme_classic()
# lollipop style
base = base +
geom_segment(aes(y = 0,
x = reorder(RuralLocale, difference),
yend = difference,
xend = reorder(RuralLocale, difference)),
color = "grey50") +
geom_point(size = 5)
# Draw horizontal line (yintercept) representing mean Student.Teacher.Ratio
# from the original data set,
# including all locales (City, Suburb, Town, Unknown) in addition to Rural.
base = base +
geom_hline(yintercept = 0,
linewidth = 1.5, #thickness
alpha = 0.5) + #transparency
annotate(geom = "text",
x = 0.5,
y = 0.3,
label = meanAnnotation,
hjust = 0,
vjust = 1,
size = 4)
base = base +
theme(axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(), # can also tidy up x-axis
axis.ticks.x = element_blank())
# Decorate with contextual info
base = base +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
y = y.AxisText,
caption = sourceText,
colour = legTitle) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0))
base
rm(base)
# Initialize base plot, reorder by mean
# Color-blind colors chosen from:
# https://davidmathlogic.com/colorblind/
base = ggplot(data = ruralEduwa_STRatio,
aes(x = reorder(RuralLocale, difference),
y = difference,
color = gtMean,
label = paste("mean\n",
round(mean_Student.Teacher.Ratio, 1))),
hjust = 0) +
scale_color_manual(values =
c(Yes = "#882255",
No = "#117733")) +
geom_text(nudge_x = 0.4, # to the right
show.legend = FALSE)
base = base + theme_classic()
# lollipop style
base = base +
geom_segment(aes(y = 0,
x = reorder(RuralLocale, difference),
yend = difference,
xend = reorder(RuralLocale, difference)),
color = "grey50") +
geom_point(size = 5)
# Draw horizontal line (yintercept) representing mean Student.Teacher.Ratio
# from the original data set,
# including all locales (City, Suburb, Town, Unknown) in addition to Rural.
base = base +
geom_hline(yintercept = 0,
linewidth = 1.5, #thickness
alpha = 0.5) + #transparency
annotate(geom = "text",
x = 0.5,
y = 0.3,
label = meanAnnotation,
hjust = 0,
vjust = 1,
size = 4)
base = base +
theme(axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(), # can also tidy up x-axis
axis.ticks.x = element_blank())
# Decorate with contextual info
base = base +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
y = y.AxisText,
caption = sourceText,
colour = legTitle) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0))
base
legTitle = 'Greater than \nSTR μ'
rm(base)
# Initialize base plot, reorder by mean
# Color-blind colors chosen from:
# https://davidmathlogic.com/colorblind/
base = ggplot(data = ruralEduwa_STRatio,
aes(x = reorder(RuralLocale, difference),
y = difference,
color = gtMean,
label = paste("mean\n",
round(mean_Student.Teacher.Ratio, 1))),
hjust = 0) +
scale_color_manual(values =
c(Yes = "#882255",
No = "#117733")) +
geom_text(nudge_x = 0.3, # to the right
show.legend = FALSE)
base = base + theme_classic()
# lollipop style
base = base +
geom_segment(aes(y = 0,
x = reorder(RuralLocale, difference),
yend = difference,
xend = reorder(RuralLocale, difference)),
color = "grey50") +
geom_point(size = 5)
# Draw horizontal line (yintercept) representing mean Student.Teacher.Ratio
# from the original data set,
# including all locales (City, Suburb, Town, Unknown) in addition to Rural.
base = base +
geom_hline(yintercept = 0,
linewidth = 1.5, #thickness
alpha = 0.5) + #transparency
annotate(geom = "text",
x = 0.5,
y = 0.3,
label = meanAnnotation,
hjust = 0,
vjust = 1,
size = 4)
base = base +
theme(axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(), # can also tidy up x-axis
axis.ticks.x = element_blank())
# Decorate with contextual info
base = base +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
y = y.AxisText,
caption = sourceText,
colour = legTitle) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0))
base
legTitle = 'Greater than \nSTR mean'
meanAnnotation = paste("STR mean of all WA schools =", round(meanSTRatio, 2))
rm(base)
# Initialize base plot, reorder by mean
# Color-blind colors chosen from:
# https://davidmathlogic.com/colorblind/
base = ggplot(data = ruralEduwa_STRatio,
aes(x = reorder(RuralLocale, difference),
y = difference,
color = gtMean,
label = paste("mean\n",
round(mean_Student.Teacher.Ratio, 1))),
hjust = 0) +
scale_color_manual(values =
c(Yes = "#882255",
No = "#117733")) +
geom_text(nudge_x = 0.3, # to the right
show.legend = FALSE)
base = base + theme_classic()
# lollipop style
base = base +
geom_segment(aes(y = 0,
x = reorder(RuralLocale, difference),
yend = difference,
xend = reorder(RuralLocale, difference)),
color = "grey50") +
geom_point(size = 5)
# Draw horizontal line (yintercept) representing mean Student.Teacher.Ratio
# from the original data set,
# including all locales (City, Suburb, Town, Unknown) in addition to Rural.
base = base +
geom_hline(yintercept = 0,
linewidth = 1.5, #thickness
alpha = 0.5) + #transparency
annotate(geom = "text",
x = 0.5,
y = 0.3,
label = meanAnnotation,
hjust = 0,
vjust = 1,
size = 4)
base = base +
theme(axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(), # can also tidy up x-axis
axis.ticks.x = element_blank())
# Decorate with contextual info
base = base +
labs(title = titleText,
subtitle = sub_titleText,
x = x.AxisText,
y = y.AxisText,
caption = sourceText,
colour = legTitle) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0))
base
# write to an R data serialization file
saveRDS(base, file = "assignment01_eduwa.rds")
setwd("~/Harvard CS50/HW/testVisual")
# write to an R data serialization file
saveRDS(base, file = "assignment01_eduwa.rds")
library(flexdashboard) # always
readRDS("assignment01_eduwa.rds")
